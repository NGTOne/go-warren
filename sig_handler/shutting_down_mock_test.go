// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/NGTOne/warren/sig_handler (interfaces: Shutdownable)

// Package sig_handler_test is a generated GoMock package.
package sig_handler_test

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockShutdownable is a mock of Shutdownable interface
type MockShutdownable struct {
	ctrl     *gomock.Controller
	recorder *MockShutdownableMockRecorder
}

// MockShutdownableMockRecorder is the mock recorder for MockShutdownable
type MockShutdownableMockRecorder struct {
	mock *MockShutdownable
}

// NewMockShutdownable creates a new mock instance
func NewMockShutdownable(ctrl *gomock.Controller) *MockShutdownable {
	mock := &MockShutdownable{ctrl: ctrl}
	mock.recorder = &MockShutdownableMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockShutdownable) EXPECT() *MockShutdownableMockRecorder {
	return m.recorder
}

// ShutDown mocks base method
func (m *MockShutdownable) ShutDown() {
	m.ctrl.Call(m, "ShutDown")
}

// ShutDown indicates an expected call of ShutDown
func (mr *MockShutdownableMockRecorder) ShutDown() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShutDown", reflect.TypeOf((*MockShutdownable)(nil).ShutDown))
}
