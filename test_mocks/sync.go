// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/NGTOne/warren/service (interfaces: SynchronousAction)

// Package test_mocks is a generated GoMock package.
package test_mocks

import (
	conn "github.com/NGTOne/warren/conn"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSynchronousAction is a mock of SynchronousAction interface
type MockSynchronousAction struct {
	ctrl     *gomock.Controller
	recorder *MockSynchronousActionMockRecorder
}

// MockSynchronousActionMockRecorder is the mock recorder for MockSynchronousAction
type MockSynchronousActionMockRecorder struct {
	mock *MockSynchronousAction
}

// NewMockSynchronousAction creates a new mock instance
func NewMockSynchronousAction(ctrl *gomock.Controller) *MockSynchronousAction {
	mock := &MockSynchronousAction{ctrl: ctrl}
	mock.recorder = &MockSynchronousActionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSynchronousAction) EXPECT() *MockSynchronousActionMockRecorder {
	return m.recorder
}

// Process mocks base method
func (m *MockSynchronousAction) Process(arg0 conn.Message) (conn.Message, error) {
	ret := m.ctrl.Call(m, "Process", arg0)
	ret0, _ := ret[0].(conn.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Process indicates an expected call of Process
func (mr *MockSynchronousActionMockRecorder) Process(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Process", reflect.TypeOf((*MockSynchronousAction)(nil).Process), arg0)
}
