// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/NGTOne/warren/service (interfaces: ErrorHandler)

// Package test_mocks is a generated GoMock package.
package test_mocks

import (
	conn "github.com/NGTOne/warren/conn"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockErrorHandler is a mock of ErrorHandler interface
type MockErrorHandler struct {
	ctrl     *gomock.Controller
	recorder *MockErrorHandlerMockRecorder
}

// MockErrorHandlerMockRecorder is the mock recorder for MockErrorHandler
type MockErrorHandlerMockRecorder struct {
	mock *MockErrorHandler
}

// NewMockErrorHandler creates a new mock instance
func NewMockErrorHandler(ctrl *gomock.Controller) *MockErrorHandler {
	mock := &MockErrorHandler{ctrl: ctrl}
	mock.recorder = &MockErrorHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockErrorHandler) EXPECT() *MockErrorHandlerMockRecorder {
	return m.recorder
}

// ProcessError mocks base method
func (m *MockErrorHandler) ProcessError(arg0 conn.Message, arg1 error) error {
	ret := m.ctrl.Call(m, "ProcessError", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ProcessError indicates an expected call of ProcessError
func (mr *MockErrorHandlerMockRecorder) ProcessError(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessError", reflect.TypeOf((*MockErrorHandler)(nil).ProcessError), arg0, arg1)
}
