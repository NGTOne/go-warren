// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/NGTOne/warren/service (interfaces: ErrHandler)

// Package test_mocks is a generated GoMock package.
package test_mocks

import (
	conn "github.com/NGTOne/warren/conn"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockErrHandler is a mock of ErrHandler interface
type MockErrHandler struct {
	ctrl     *gomock.Controller
	recorder *MockErrHandlerMockRecorder
}

// MockErrHandlerMockRecorder is the mock recorder for MockErrHandler
type MockErrHandlerMockRecorder struct {
	mock *MockErrHandler
}

// NewMockErrHandler creates a new mock instance
func NewMockErrHandler(ctrl *gomock.Controller) *MockErrHandler {
	mock := &MockErrHandler{ctrl: ctrl}
	mock.recorder = &MockErrHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockErrHandler) EXPECT() *MockErrHandlerMockRecorder {
	return m.recorder
}

// ProcessError mocks base method
func (m *MockErrHandler) ProcessError(arg0 conn.Message, arg1 error) error {
	ret := m.ctrl.Call(m, "ProcessError", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ProcessError indicates an expected call of ProcessError
func (mr *MockErrHandlerMockRecorder) ProcessError(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessError", reflect.TypeOf((*MockErrHandler)(nil).ProcessError), arg0, arg1)
}
